
# progv_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0AC33AF2E8731BF3261943A641F2D24B'
    
_lr_action_items = {'LOGICAL_EQUAL':([3,5,7,9,14,16,17,19,20,25,27,28,48,51,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,83,86,90,],[-26,-23,-25,-24,-27,30,-23,30,30,30,-28,30,30,30,-29,-33,-35,-41,-42,-37,-40,30,-34,-36,30,-38,-39,-43,-44,30,-9,-30,]),'RETURN':([0,3,4,5,7,9,14,15,16,17,19,27,28,34,43,45,46,47,48,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,83,84,85,86,90,92,93,94,95,96,],[1,-26,-4,-23,-25,-24,-27,1,-13,-23,-13,-28,1,-22,-14,-20,1,-13,-13,-29,-11,-13,-12,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,1,-17,-19,-44,-13,-16,1,-9,-30,-21,-13,-12,-3,-18,]),'NUMBER':([0,1,2,3,4,5,7,9,10,12,13,14,15,16,17,19,21,22,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,83,84,85,86,90,92,93,94,95,96,],[9,9,9,-26,-4,-23,-25,-24,9,9,9,-27,9,-13,-23,-13,9,9,-28,9,9,9,9,9,-22,9,9,9,9,9,9,9,9,-14,9,-20,9,-13,-13,-29,9,-11,-13,-12,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,9,-17,-19,-44,9,-13,-16,9,-9,-30,-21,-13,-12,-3,-18,]),'WHILE':([0,3,4,5,7,9,14,15,16,17,19,27,28,34,43,45,46,47,48,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,83,84,85,86,90,92,93,94,95,96,],[2,-26,-4,-23,-25,-24,-27,2,-13,-23,-13,-28,2,-22,-14,-20,2,-13,-13,-29,-11,-13,-12,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,2,-17,-19,-44,-13,-16,2,-9,-30,-21,-13,-12,-3,-18,]),'LOGICAL_AND':([3,5,7,9,14,16,17,19,20,25,27,28,48,51,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,83,86,90,],[-26,-23,-25,-24,-27,40,-23,40,40,40,-28,40,40,40,-29,-33,-35,-41,-42,-37,-40,40,-34,-36,-32,-38,-39,-43,-44,40,-9,-30,]),'TRUE':([0,1,2,3,4,5,7,9,10,12,13,14,15,16,17,19,21,22,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,83,84,85,86,90,92,93,94,95,96,],[3,3,3,-26,-4,-23,-25,-24,3,3,3,-27,3,-13,-23,-13,3,3,-28,3,3,3,3,3,-22,3,3,3,3,3,3,3,3,-14,3,-20,3,-13,-13,-29,3,-11,-13,-12,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,3,-17,-19,-44,3,-13,-16,3,-9,-30,-21,-13,-12,-3,-18,]),'MINUS':([3,5,7,9,14,16,17,19,20,25,27,28,48,51,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,83,86,90,],[-26,-23,-25,-24,-27,42,-23,42,42,42,-28,42,42,42,-29,42,42,-41,-42,42,-40,42,42,42,42,-38,-39,-43,-44,42,-9,-30,]),'DIVIDE':([3,5,7,9,14,16,17,19,20,25,27,28,48,51,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,83,86,90,],[-26,-23,-25,-24,-27,32,-23,32,32,32,-28,32,32,32,-29,32,32,-41,-42,32,-40,32,32,32,32,32,32,-43,-44,32,-9,-30,]),'LE':([3,5,7,9,14,16,17,19,20,25,27,28,48,51,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,83,86,90,],[-26,-23,-25,-24,-27,39,-23,39,39,39,-28,39,39,39,-29,39,-35,-41,-42,-37,-40,39,-34,-36,39,-38,-39,-43,-44,39,-9,-30,]),'RPAREN':([3,7,9,14,17,22,23,25,27,49,50,51,52,53,54,55,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,82,86,88,89,90,],[-26,-25,-24,-27,-23,-46,-6,56,-28,78,-45,-48,-5,-8,81,-6,-29,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,-44,91,-9,-47,-7,-30,]),'POWER':([3,5,7,9,14,16,17,19,20,25,27,28,48,51,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,83,86,90,],[-26,-23,-25,-24,-27,33,-23,33,33,33,-28,33,33,33,-29,33,33,33,-42,33,33,33,33,33,33,33,33,33,-44,33,-9,-30,]),'LT':([3,5,7,9,14,16,17,19,20,25,27,28,48,51,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,83,86,90,],[-26,-23,-25,-24,-27,38,-23,38,38,38,-28,38,38,38,-29,38,-35,-41,-42,-37,-40,38,-34,-36,38,-38,-39,-43,-44,38,-9,-30,]),'PLUS':([3,5,7,9,14,16,17,19,20,25,27,28,48,51,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,83,86,90,],[-26,-23,-25,-24,-27,41,-23,41,41,41,-28,41,41,41,-29,41,41,-41,-42,41,-40,41,41,41,41,-38,-39,-43,-44,41,-9,-30,]),'COMMA':([3,7,9,14,17,27,51,53,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,86,90,],[-26,-25,-24,-27,-23,-28,79,80,-29,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,-44,-9,-30,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,19,21,22,23,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,83,84,85,86,90,92,93,94,95,96,],[5,17,17,-26,-4,-23,24,-25,-24,17,26,17,17,-27,5,-13,-23,-13,17,17,53,-28,5,17,17,17,17,-22,17,17,17,17,17,17,17,17,-14,17,-20,5,-13,-13,53,-29,17,-11,-13,-12,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,5,-17,-19,-44,17,53,-13,-16,5,-9,-30,-21,-13,-12,-3,-18,]),'$end':([0,3,4,5,7,8,9,14,15,16,17,19,27,29,34,43,45,47,48,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,78,83,84,86,90,92,93,94,95,96,],[-2,-26,-4,-23,-25,0,-24,-27,-2,-13,-23,-13,-28,-1,-22,-14,-20,-13,-13,-29,-11,-13,-12,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,-17,-19,-44,-13,-16,-9,-30,-21,-13,-12,-3,-18,]),'FUNCTION':([0,1,2,3,4,5,7,9,10,12,13,14,15,16,17,19,21,22,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,83,84,85,86,90,92,93,94,95,96,],[6,18,18,-26,-4,-23,-25,-24,18,18,18,-27,6,-13,-23,-13,18,18,-28,18,18,18,18,18,-22,18,18,18,18,18,18,18,18,-14,18,-20,18,-13,-13,-29,18,-11,-13,-12,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,18,-17,-19,-44,18,-13,-16,18,-9,-30,-21,-13,-12,-3,-18,]),'GT':([3,5,7,9,14,16,17,19,20,25,27,28,48,51,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,83,86,90,],[-26,-23,-25,-24,-27,31,-23,31,31,31,-28,31,31,31,-29,31,-35,-41,-42,-37,-40,31,-34,-36,31,-38,-39,-43,-44,31,-9,-30,]),'STRING':([0,1,2,3,4,5,7,9,10,12,13,14,15,16,17,19,21,22,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,83,84,85,86,90,92,93,94,95,96,],[7,7,7,-26,-4,-23,-25,-24,7,7,7,-27,7,-13,-23,-13,7,7,-28,7,7,7,7,7,-22,7,7,7,7,7,7,7,7,-14,7,-20,7,-13,-13,-29,7,-11,-13,-12,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,7,-17,-19,-44,7,-13,-16,7,-9,-30,-21,-13,-12,-3,-18,]),'EQUAL':([5,26,],[21,57,]),'RBRACE':([3,5,7,9,14,16,17,19,27,34,43,45,46,47,48,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,84,86,87,90,92,93,94,96,],[-26,-23,-25,-24,-27,-13,-23,-13,-28,-22,-14,-20,-15,-13,-13,-29,-11,-13,-12,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,86,-15,-17,-19,-44,-13,-16,-9,-10,-30,-21,-13,-12,-18,]),'TIMES':([3,5,7,9,14,16,17,19,20,25,27,28,48,51,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,83,86,90,],[-26,-23,-25,-24,-27,36,-23,36,36,36,-28,36,36,36,-29,36,36,-41,-42,36,-40,36,36,36,36,36,36,-43,-44,36,-9,-30,]),'GE':([3,5,7,9,14,16,17,19,20,25,27,28,48,51,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,83,86,90,],[-26,-23,-25,-24,-27,35,-23,35,35,35,-28,35,35,35,-29,35,-35,-41,-42,-37,-40,35,-34,-36,35,-38,-39,-43,-44,35,-9,-30,]),'LPAREN':([0,1,2,3,4,5,6,7,9,10,12,13,14,15,16,17,18,19,21,22,24,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,83,84,85,86,90,92,93,94,95,96,],[10,10,10,-26,-4,22,23,-25,-24,10,10,10,-27,10,-13,22,23,-13,10,10,55,-28,10,10,10,10,10,-22,10,10,10,10,10,10,10,10,-14,10,-20,10,-13,-13,-29,10,-11,-13,-12,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,10,-17,-19,-44,10,-13,-16,10,-9,-30,-21,-13,-12,-3,-18,]),'VAR':([0,3,4,5,7,9,14,15,16,17,19,27,28,34,43,45,46,47,48,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,83,84,85,86,90,92,93,94,95,96,],[11,-26,-4,-23,-25,-24,-27,11,-13,-23,-13,-28,11,-22,-14,-20,11,-13,-13,-29,-11,-13,-12,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,11,-17,-19,-44,-13,-16,11,-9,-30,-21,-13,-12,-3,-18,]),'LOGICAL_NOT':([0,1,2,3,4,5,7,9,10,12,13,14,15,16,17,19,21,22,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,83,84,85,86,90,92,93,94,95,96,],[12,12,12,-26,-4,-23,-25,-24,12,12,12,-27,12,-13,-23,-13,12,12,-28,12,12,12,12,12,-22,12,12,12,12,12,12,12,12,-14,12,-20,12,-13,-13,-29,12,-11,-13,-12,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,12,-17,-19,-44,12,-13,-16,12,-9,-30,-21,-13,-12,-3,-18,]),'ELSE':([60,86,],[85,-9,]),'IF':([0,3,4,5,7,9,14,15,16,17,19,27,28,34,43,45,46,47,48,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,83,84,85,86,90,92,93,94,95,96,],[13,-26,-4,-23,-25,-24,-27,13,-13,-23,-13,-28,13,-22,-14,-20,13,-13,-13,-29,-11,-13,-12,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,13,-17,-19,-44,-13,-16,13,-9,-30,-21,-13,-12,-3,-18,]),'LBRACE':([3,7,9,14,17,20,27,28,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,81,85,86,90,91,],[-26,-25,-24,-27,-23,46,-28,46,-29,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,-44,46,46,-9,-30,46,]),'FALSE':([0,1,2,3,4,5,7,9,10,12,13,14,15,16,17,19,21,22,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,83,84,85,86,90,92,93,94,95,96,],[14,14,14,-26,-4,-23,-25,-24,14,14,14,-27,14,-13,-23,-13,14,14,-28,14,14,14,14,14,-22,14,14,14,14,14,14,14,14,-14,14,-20,14,-13,-13,-29,14,-11,-13,-12,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,14,-17,-19,-44,14,-13,-16,14,-9,-30,-21,-13,-12,-3,-18,]),'SEMICOLON':([3,5,7,9,14,16,17,19,27,34,43,45,47,48,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,78,83,84,86,90,92,93,94,96,],[-26,-23,-25,-24,-27,43,-23,43,-28,-22,-14,-20,43,43,-29,-11,43,-12,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,-17,-19,-44,43,-16,-9,-30,-21,43,-12,-18,]),'LOGICAL_OR':([3,5,7,9,14,16,17,19,20,25,27,28,48,51,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,83,86,90,],[-26,-23,-25,-24,-27,37,-23,37,37,37,-28,37,37,37,-29,-33,-35,-41,-42,-37,-40,-31,-34,-36,-32,-38,-39,-43,-44,37,-9,-30,]),'MOD':([3,5,7,9,14,16,17,19,20,25,27,28,48,51,56,61,62,63,64,65,66,67,68,69,70,71,72,73,78,83,86,90,],[-26,-23,-25,-24,-27,44,-23,44,44,44,-28,44,44,44,-29,44,44,-41,-42,44,-40,44,44,44,44,44,44,-43,-44,44,-9,-30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmt_or_compound':([28,85,],[59,93,]),'progv':([0,15,],[8,29,]),'sstmt':([0,15,28,46,75,85,],[4,4,58,75,75,58,]),'optsemi':([16,19,47,48,59,83,93,],[34,45,76,77,84,92,96,]),'args':([22,79,],[50,88,]),'element':([0,15,],[15,15,]),'stmts':([46,75,],[74,87,]),'params':([23,55,80,],[52,52,89,]),'exp':([0,1,2,10,12,13,15,21,22,28,30,31,32,33,35,36,37,38,39,40,41,42,44,46,57,75,79,85,],[16,19,20,25,27,28,16,48,51,16,61,62,63,64,65,66,67,68,69,70,71,72,73,16,83,16,51,16,]),'optparams':([23,55,],[54,82,]),'compoundstmt':([20,28,81,85,91,],[47,60,90,94,95,]),'optargs':([22,],[49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> progv","S'",1,None,None,None),
  ('progv -> element progv','progv',2,'p_progv','grammar.py',9),
  ('progv -> <empty>','progv',0,'p_progv_empty','grammar.py',13),
  ('element -> FUNCTION IDENTIFIER LPAREN optparams RPAREN compoundstmt','element',6,'p_element_function','grammar.py',17),
  ('element -> sstmt','element',1,'p_element_stmt','grammar.py',21),
  ('optparams -> params','optparams',1,'p_optparams','grammar.py',25),
  ('optparams -> <empty>','optparams',0,'p_optparams_empty','grammar.py',29),
  ('params -> IDENTIFIER COMMA params','params',3,'p_params','grammar.py',33),
  ('params -> IDENTIFIER','params',1,'p_params_one','grammar.py',37),
  ('compoundstmt -> LBRACE stmts RBRACE','compoundstmt',3,'p_compoundstmt','grammar.py',41),
  ('stmts -> sstmt stmts','stmts',2,'p_stmts','grammar.py',45),
  ('stmt_or_compound -> sstmt','stmt_or_compound',1,'p_stmt_or_compound','grammar.py',49),
  ('stmt_or_compound -> compoundstmt','stmt_or_compound',1,'p_stmt_or_compound_c','grammar.py',53),
  ('optsemi -> <empty>','optsemi',0,'p_optsemi_none','grammar.py',57),
  ('optsemi -> SEMICOLON','optsemi',1,'p_optsemi_some','grammar.py',61),
  ('stmts -> <empty>','stmts',0,'p_stmts_empty','grammar.py',65),
  ('sstmt -> IF exp stmt_or_compound optsemi','sstmt',4,'p_sstmt_if','grammar.py',70),
  ('sstmt -> WHILE exp compoundstmt optsemi','sstmt',4,'p_sstmt_while','grammar.py',74),
  ('sstmt -> IF exp compoundstmt ELSE stmt_or_compound optsemi','sstmt',6,'p_sstmt_if_else','grammar.py',78),
  ('sstmt -> IDENTIFIER EQUAL exp optsemi','sstmt',4,'p_sstmt_assignment','grammar.py',82),
  ('sstmt -> RETURN exp optsemi','sstmt',3,'p_sstmt_return','grammar.py',86),
  ('sstmt -> VAR IDENTIFIER EQUAL exp optsemi','sstmt',5,'p_sstmt_var','grammar.py',90),
  ('sstmt -> exp optsemi','sstmt',2,'p_sstmt_exp','grammar.py',94),
  ('exp -> IDENTIFIER','exp',1,'p_exp_identifier','grammar.py',114),
  ('exp -> NUMBER','exp',1,'p_exp_number','grammar.py',118),
  ('exp -> STRING','exp',1,'p_exp_string','grammar.py',122),
  ('exp -> TRUE','exp',1,'p_exp_true','grammar.py',126),
  ('exp -> FALSE','exp',1,'p_exp_false','grammar.py',130),
  ('exp -> LOGICAL_NOT exp','exp',2,'p_exp_logical_not','grammar.py',134),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_parens','grammar.py',138),
  ('exp -> FUNCTION LPAREN optparams RPAREN compoundstmt','exp',5,'p_exp_lambda','grammar.py',142),
  ('exp -> exp LOGICAL_OR exp','exp',3,'p_exp_binop','grammar.py',146),
  ('exp -> exp LOGICAL_AND exp','exp',3,'p_exp_binop','grammar.py',147),
  ('exp -> exp LOGICAL_EQUAL exp','exp',3,'p_exp_binop','grammar.py',148),
  ('exp -> exp LT exp','exp',3,'p_exp_binop','grammar.py',149),
  ('exp -> exp GT exp','exp',3,'p_exp_binop','grammar.py',150),
  ('exp -> exp LE exp','exp',3,'p_exp_binop','grammar.py',151),
  ('exp -> exp GE exp','exp',3,'p_exp_binop','grammar.py',152),
  ('exp -> exp PLUS exp','exp',3,'p_exp_binop','grammar.py',153),
  ('exp -> exp MINUS exp','exp',3,'p_exp_binop','grammar.py',154),
  ('exp -> exp TIMES exp','exp',3,'p_exp_binop','grammar.py',155),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_binop','grammar.py',156),
  ('exp -> exp POWER exp','exp',3,'p_exp_binop','grammar.py',157),
  ('exp -> exp MOD exp','exp',3,'p_exp_binop','grammar.py',158),
  ('exp -> IDENTIFIER LPAREN optargs RPAREN','exp',4,'p_exp_call','grammar.py',162),
  ('optargs -> args','optargs',1,'p_optargs','grammar.py',166),
  ('optargs -> <empty>','optargs',0,'p_optargs_empty','grammar.py',170),
  ('args -> exp COMMA args','args',3,'p_args','grammar.py',174),
  ('args -> exp','args',1,'p_args_one','grammar.py',178),
]
